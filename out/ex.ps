%!PS-Adobe-3.0
%%Title: globfile.py, lib.py, readered.py, reader.py, table.py, zoutput.txt
%%For: rekoJ
%%Creator: a2ps version 4.14
%%CreationDate: Sun Sep  1 21:09:46 2013
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 6
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Orignal Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.060185 def
/cw 4.236111 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 86.400000 mul
def
/ph
   520.335631 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 5 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (#Info for table) c n
0 T (#) N
0 T () S
(csvindex = -1 ) p
(#initialized to -1 as lists start at zero) c n
0 T () S
(colname = [] ) p
(#stores names of columns) c n
(5) # () S
(data = [] ) p
(#stores list of lists containing each row) c n
0 T (#) N
0 T (#metadata) N
0 T (#) N
0 T () S
(order = dict.fromkeys\(colname\) ) p
(#stores colnames and index of column in csv) c n
(10) # () S
(klass = [] ) p
(#list of klass columns) c n
0 T () S
(more = [] ) p
(#list of more columns) c n
0 T () S
(less = [] ) p
(#list of less columns) c n
0 T () S
(num = [] ) p
(#list of num columns) c n
0 T () S
(term = [] ) p
(#list of term columns) c n
(15) # () S
(dep = [] ) p
(#list of dependent columns) c n
0 T () S
(indep = [] ) p
(#list of independent columns) c n
0 T () S
(nump = [] ) p
(#list containing nump column names) c n
0 T () S
(wordp = [] ) p
(#list containing wordp column names) c n
0 T (#) N
(20) # (#for nump values) N
0 T (#) N
0 T () S
(hi = dict.fromkeys\(nump\) ) p
(#dictionary containing highest values of nump columns ) c n
0 T () S
(lo = dict.fromkeys\(nump\) ) p
(#dictionary containing lowest values of nump columns) c n
0 T () S
(mu = dict.fromkeys\(nump\) ) p
(#dictionary containing mean values of nump columns) c n
(25) # () S
(m2 = dict.fromkeys\(nump\) ) p
(#dictionary containing m2 values of nump columns) c n
0 T () S
(sd = dict.fromkeys\(nump\) ) p
(#dictionary containing std dev of nump columns) c n
0 T (#) N
0 T (#for wordp values) N
0 T (#) N
(30) # () S
(mode = dict.fromkeys\(wordp\) ) p
(#dictionary containing mode of wordp columns) c n
0 T () S
(most = dict.fromkeys\(wordp\) ) p
(#dictionary containing most occured item of wordp co) c n
0 T (lumns) N
0 T () S
(count = dict\(\(dict.fromkeys\(wordp\)\)\) ) p
(#dictionary of dictionaries of count of eac) c n
0 T (h item in each wordp column) N
0 T (#) N
0 T (#for all) N
(35) # (#) N
0 T () S
(n = dict.fromkeys\(colname\) ) p
(#stores number of elements in each column) c n
0 T () S
(isnum = True) p n
(573:proj1b :Naveen Kumar Lekkalapudi) (Page 1/1) (Sep 01, 13 19:09) title
border
grestore
(Printed by rekoJ) rhead
(globfile.py) (1/6) (Sunday September 01, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (import) K
( re) p n
0 T () S
(from) K
( globfile ) p
(import) K
( *) p n
0 T () N
0 T () S
(def) K
( line\(csvfile\): ) p
(#returns formatted line from the csvfile ) c n
(5) # () S
(    l = csvfile.readline\(\)) p n
0 T (    endcommare = re.compile\(') S
(.*,$) str
('\)) p n
0 T (    ) S
(if) K
( l ) p
(\271) sy
( '':) p n
0 T (        l = l.split\(') S
(#) str
('\)[0]) p n
0 T (        l = l.replace\(') S
(\\t) str
(',''\)) p n
(10) # (        l = l.replace\(') S
(\\n) str
(',''\)) p n
0 T (        l = l.replace\(') S
( ) str
(',''\)) p n
0 T (        endcomma = endcommare.match\(l\)) N
0 T (        ) S
(if) K
( endcomma:) p n
0 T (            ) S
(return) K
( l+line\(csvfile\)) p n
(15) # (        ) S
(else) K
(:) p n
0 T (            ) S
(return) K
( l) p n
0 T (    ) S
(else) K
(:) p n
0 T (        ) S
(return) K
( -1) p n
0 T () N
(20) # () S
(def) K
( rowprint\(row\): ) p
(#returns neat rows) c n
0 T () S
(    columns = [ ") p
(%15s) str
(" % cell ) p
(for) K
( cell ) p
(in) K
( row]) p n
0 T (    columns.append\(") S
(%4s) str
(" % ') p
(#) str
('\)) p n
0 T (    ) S
(return) K
( ') p
( ) str
('.join\(columns\)) p n
0 T (   ) N
(25) # () S
(def) K
( expected\(row\): ) p
(#returns expected outcome) c n
0 T () S
(    out = [c ) p
(for) K
( c ) p
(in) K
( colname]) p n
0 T (    ) S
(for) K
( c ) p
(in) K
( row:) p n
0 T (        ) S
(if) K
( c ) p
(in) K
( wordp:) p n
0 T (            out[colname.index\(c\)] = str\(mode[c]\)) N
(30) # (        ) S
(else) K
(:) p n
0 T (            out[colname.index\(c\)] = str\(') S
(%0.2f) str
(' % round\(mu[c],2\)\)) p n
0 T (    ) S
(return) K
( out) p n
(573:proj1b :Naveen Kumar Lekkalapudi) (Page 1/1) (Sep 01, 13 21:07) title
border
grestore
(Printed by rekoJ) rhead
(lib.py) (2/6) (Sunday September 01, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (from) K
( reader ) p
(import) K
( *) p n
0 T () S
(from) K
( table ) p
(import) K
( *) p n
0 T () S
(from) K
( sys ) p
(import) K
( argv) p n
0 T (csvfile = open\(') S
(../data/weather1.csv) str
(',') p
(r) str
('\)) p n
(5) # (readCsv\(csvfile,argv[1],argv[2]\) """) S
(takes predicted column as ) str n
0 T (                                    first arguement and predicted value as second arguement) S
(""") p n
0 T (tableprint\(csvfile\)) N
0 T () N
(573:proj1b :Naveen Kumar Lekkalapudi) (Page 1/1) (Sep 01, 13 21:08) title
border
grestore
(Printed by rekoJ) rhead
(readered.py) (3/6) (Sunday September 01, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (import) K
( re) p n
0 T () S
(from) K
( lib ) p
(import) K
( *) p n
0 T () N
0 T () S
(def) K
( makeTable\(str,csvindex\):) p n
(5) # (    ) S
(for) K
( csvcol ) p
(in) K
( str:) p n
0 T (        isnum=True) N
0 T (        csvindex+=1) N
0 T (        ignore = re.match\(') S
(\\?.*$) str
(',csvcol\)) p n
0 T (        ) S
(if) K
( ignore:) p n
(10) # (            ) S
(continue) K n
0 T () S
(        ) p
(else) K
(:) p n
0 T (            colname.append\(csvcol\)) N
0 T (            order[csvcol] = csvindex) N
0 T (            klasschk = re.match\(') S
(=.*$) str
(',csvcol\)) p n
(15) # (            morechk = re.match\(') S
(\\+.*$) str
(',csvcol\)) p n
0 T (            lesschk = re.match\(') S
(-.*$) str
(',csvcol\)) p n
0 T (            numchk = re.match\(') S
(\\$.*$) str
(',csvcol\)) p n
0 T (            ) S
(if) K
( klasschk:) p n
0 T (                dep.append\(csvcol\)) N
(20) # (                klass.append\(csvcol\)) N
0 T (                isnum = False) N
0 T (            ) S
(elif) K
( morechk:) p n
0 T (                dep.append\(csvcol\)) N
0 T (                more.append\(csvcol\)) N
(25) # (            ) S
(elif) K
( lesschk:) p n
0 T (                dep.append\(csvcol\)) N
0 T (                less.append\(csvcol\)) N
0 T (            ) S
(elif) K
( numchk:) p n
0 T (                indep.append\(csvcol\)) N
(30) # (                num.append\(csvcol\)) N
0 T (            ) S
(else) K
(:) p n
0 T (                indep.append\(csvcol\)) N
0 T (                term.append\(csvcol\)) N
0 T (                isnum = False) N
(35) # (            n[csvcol] = 0) N
0 T (            ) S
(if) K
( isnum:) p n
0 T (                nump.append\(csvcol\)) N
0 T (                hi[csvcol] = 0.1 * \(-10**13\)) N
0 T (                lo[csvcol] = 0.1 * \(10**13\)) N
(40) # (                mu[csvcol] = 0.0) N
0 T (                m2[csvcol] = 0.0) N
0 T (                sd[csvcol] = 0.0) N
0 T (            ) S
(else) K
(:) p n
0 T (                wordp.append\(csvcol\)) N
(45) # (                count[csvcol] = dict\(\)) N
0 T (                mode[csvcol] = 0) N
0 T (                most[csvcol] = 0               ) N
0 T (    ) N
0 T () S
(def) K
( addRow\(str,predclass,pred,colname,data,csvindex\):) p n
(50) # (    temp = []) N
0 T (    skip = False) N
0 T (    ) S
(if) K
( predclass ) p
(in) K
( klass:) p n
0 T (        csvindex = order[predclass]) N
0 T (        item = str[csvindex]) N
(55) # (        ) S
(if) K
( item ) p
(\272) sy
( pred:) p n
0 T (            skip = False) N
0 T (        ) S
(elif) K
( pred ) p
(\272) sy
( ') p
(both) str
(':) p n
0 T (            skip = False) N
0 T (        ) S
(else) K
(:) p n
(60) # (            skip = True) N
0 T (    ) S
(else) K
(:) p n
0 T (        ) S
(print) K
( ') p
(WARNING: Class to be predicted is not in klass) str
(') p n
0 T (    ) S
(if) K
( skip:) p n
0 T (        ) S
(return) K n
(65) # () S
(    ) p
(for) K
( c ) p
(in) K
( colname:) p n
0 T (        csvindex = order[c]) N
0 T (        item = str[csvindex]) N
0 T (        uncertain = re.match\(') S
(\\?) str
(',item\)) p n
0 T (        ) S
(if) K
( uncertain:) p n
(70) # (            temp.append\(item\)) N
0 T (        ) S
(else) K
(:) p n
0 T (            n[c] += 1) N
0 T (            ) S
(if) K
( c ) p
(in) K
( wordp:) p n
(573:proj1b :Naveen Kumar Lekkalapudi) (Page 1/2) (Sep 01, 13 21:09) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (                temp.append\(item\)) p n
(75) # (                ) S
(try) K
(:) p n
0 T (                    new = count[c][item] = count[c][item] + 1) N
0 T (                    ) S
(if) K
( new > most[c]:) p n
0 T (                        most[c] = new) N
0 T (                        mode[c] = item) N
(80) # (                ) S
(except) K
( KeyError:) p n
0 T (                    count[c][item] = 1) N
0 T (                    ) S
(if) K
( count[c][item] > most[c]: ) p n
0 T (                        most[c] = 1) N
0 T (                        mode[c] = item) N
(85) # (            ) S
(else) K
(:) p n
0 T (                item = float\(item\)) N
0 T (                temp.append\(item\)) N
0 T (                ) S
(if) K
( item > hi[c]:) p n
0 T (                    hi[c] = item) N
(90) # (                ) S
(if) K
( item < lo[c]:) p n
0 T (                    lo[c] = item) N
0 T (                delta = item - mu[c]) N
0 T (                mu[c] += delta / n[c]) N
0 T (                m2[c] = delta * \(item - mu[c]\)) N
(95) # (                ) S
(if) K
( n[c] > 1:) p n
0 T (                    sd[c] = \(m2[c] / \(n[c] - 1\)**0.5\)) N
0 T (    data.append\(temp\)    ) N
0 T () N
0 T () S
(def) K
( readCsv\(csvfile,predclass,pred\):) p n
(100) # (    seen = False) N
0 T (    FS = ') S
(,) str
(') p n
0 T (    ) S
(while) K
( True:) p n
0 T (        str = line\(csvfile\)) N
0 T (        ) S
(if) K
( str ) p
(\272) sy
( -1:) p n
(105) # (            ) S
(print) K
( ') p
(WARNING: empty or missing file) str
(') p n
0 T (            ) S
(return) K
( -1 ) p n
0 T (        str = str.split\(FS\)) N
0 T (        ) S
(if) K
( str ) p
(\271) sy
( ['']:) p n
0 T (            ) S
(if) K
( seen:) p n
(110) # (                addRow\(str,predclass,pred,colname,data,csvindex\)) N
0 T (            ) S
(else) K
(:) p n
0 T (                seen = True) N
0 T (                makeTable\(str,csvindex\)) N
(573:proj1b :Naveen Kumar Lekkalapudi) (Page 2/2) (Sep 01, 13 21:09) title
border
grestore
(Printed by rekoJ) rhead
(reader.py) (4/6) (Sunday September 01, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (from) K
( globfile ) p
(import) K
( *) p n
0 T () S
(from) K
( lib ) p
(import) K
( *) p n
0 T () S
(def) K
( tableprint\(csvfile\): ) p
(#prints table with the summary) c n
0 T () S
(    ) p
(print) K
( rowprint\(colname\),') p
(%10s) str
(' % ') p
(notes) str
(') p n
(5) # (    ) S
(print) K
( rowprint\(expected\(colname\)\), ') p
(%10s) str
(' % ') p
(expected) str
(') p n
0 T (    temp = [ c ) S
(for) K
( c ) p
(in) K
( colname ]) p n
0 T (    ) S
(for) K
( c ) p
(in) K
( colname:) p n
0 T (        ) S
(if) K
( c ) p
(in) K
( nump:) p n
0 T (            temp[colname.index\(c\)] = str\(') S
(%0.2f) str
(' % round\(sd[c],2\)\)) p n
(10) # (        ) S
(else) K
(:) p n
0 T (            temp[colname.index\(c\)] = str\(') S
(%0.2f) str
(' % round\(float\(most[c]\)/float\(n[) p n
0 T (c]\),2\)\)) N
0 T (    ) S
(print) K
( rowprint\(temp\),') p
(%10s) str
(' % ') p
(certainity) str
(') p n
0 T (    ) S
(for) K
( row ) p
(in) K
( data:) p n
0 T (        ) S
(print) K
( rowprint\(row\)) p n
(15) # () N
(573:proj1b :Naveen Kumar Lekkalapudi) (Page 1/1) (Sep 01, 13 21:09) title
border
grestore
(Printed by rekoJ) rhead
(table.py) (5/6) (Sunday September 01, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (WARNING: empty or missing file) p n
0 T (        outlook      -$humidity           windy           =play    #      notes) N
0 T (          sunny           81.83           FALSE             yes    #   expected) N
0 T (           0.36           21.94            0.57            0.64    # certainity) N
(5) # (          sunny            90.0           FALSE              no    #) N
0 T (          sunny            90.0            TRUE              no    #) N
0 T (       overcast            86.0           FALSE             yes    #) N
0 T (          rainy            96.0           FALSE             yes    #) N
0 T (          rainy            80.0           FALSE             yes    #) N
(10) # (          rainy               ?            TRUE              no    #) N
0 T (       overcast            65.0            TRUE             yes    #) N
0 T (          sunny               ?           FALSE              no    #) N
0 T (          sunny            70.0           FALSE             yes    #) N
0 T (          rainy            80.0           FALSE             yes    #) N
(15) # (          sunny            70.0            TRUE             yes    #) N
0 T (       overcast            90.0            TRUE             yes    #) N
0 T (       overcast            75.0           FALSE             yes    #) N
0 T (          rainy            90.0            TRUE              no    #) N
0 T (WARNING: empty or missing file) N
(20) # (        outlook      -$humidity           windy           =play    #      notes) N
0 T (       overcast           79.11           FALSE             yes    #   expected) N
0 T (           0.44            6.72            0.67            1.00    # certainity) N
0 T (       overcast            86.0           FALSE             yes    #) N
0 T (          rainy            96.0           FALSE             yes    #) N
(25) # (          rainy            80.0           FALSE             yes    #) N
0 T (       overcast            65.0            TRUE             yes    #) N
0 T (          sunny            70.0           FALSE             yes    #) N
0 T (          rainy            80.0           FALSE             yes    #) N
0 T (          sunny            70.0            TRUE             yes    #) N
(30) # (       overcast            90.0            TRUE             yes    #) N
0 T (       overcast            75.0           FALSE             yes    #) N
0 T (WARNING: empty or missing file) N
0 T (        outlook      -$humidity           windy           =play    #      notes) N
0 T (          sunny           90.00            TRUE              no    #   expected) N
(35) # (           0.60            0.00            0.60            1.00    # certainity) N
0 T (          sunny            90.0           FALSE              no    #) N
0 T (          sunny            90.0            TRUE              no    #) N
0 T (          rainy               ?            TRUE              no    #) N
0 T (          sunny               ?           FALSE              no    #) N
(40) # (          rainy            90.0            TRUE              no    #) N
(573:proj1b :Naveen Kumar Lekkalapudi) (Page 1/1) (Sep 01, 13 20:53) title
border
grestore
(Printed by rekoJ) rhead
(zoutput.txt) (6/6) (Sunday September 01, 2013) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
